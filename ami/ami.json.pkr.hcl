# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.


# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

locals {
  ami_name = "${var.ami_prefix}-${var.app_name}-ent-${local.timestamp}"
}


source "amazon-ebs" "autogenerated_vault" {
  access_key      = "${var.AWS_ACCESS_KEY_ID}"  # This value is fetched from the Github environment
  ami_description = "Amazon Linux Image with Vault application"
  ami_name        = local.ami_name
  instance_type   = "t2.large"
  profile         = "default"
  region          = "${var.region}"
  ami_regions     = var.ami_regions
  run_tags = {
    Name = "packer-builder-vault"  
  }
  secret_key   = "${var.AWS_SECRET_ACCESS_KEY}" # This value is fetched from the Github environment
  source_ami   = data.amazon-ami.amazon-linux-2-arm.id
  ssh_timeout  = "2m"
  ssh_username = var.user  # User used to login to ec2 and prepare the ami
  tags = {
    Name = local.ami_name
    Author      = "Puneet Sahota"
    Environment = "devops-demo"
    Created-by = "Packer"
  }

}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.amazon-ebs.autogenerated_vault"]

  # The below code demonstrates file and shell provisioners

  provisioner "file" {
    destination = "/tmp/sample_file.txt"
    source      = "./sample_file.txt"
  }
  #This script installs the vault application in dev mode
  provisioner "shell" {
    script = "./vault-install-script.sh"
  }

}
